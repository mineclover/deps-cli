#!/usr/bin/env node

import { Command } from 'commander'
import { registerAnalysisCommands } from './commands/AnalysisCommands.js'
import { createCommandRegistry } from './commands/CommandRegistry.js'
import { registerNamespaceCollectionCommands } from './commands/NamespaceCollectionCommands.js'
import { registerNamespaceCommands } from './commands/NamespaceCommands.js'

const program = new Command()

program
  .name('deps-cli')
  .description(
    'üéØ Namespace-driven TypeScript/JavaScript dependency analysis tool with configurable file patterns and comprehensive code quality insights'
  )
  .version('2.0.0')
  .option('--namespace <name>', 'Use specific configuration namespace for environment-specific analysis')
  .option('--list-namespaces', 'List all available configuration namespaces with their file patterns and settings')

// =========================================================
// COMMAND REGISTRATION
// =========================================================

// Ïª§Îß®Îìú Î†àÏßÄÏä§Ìä∏Î¶¨ Ï¥àÍ∏∞Ìôî
const registry = createCommandRegistry()

// ÌïµÏã¨ Ïª§Îß®Îìú Î™®ÎìàÎì§ Îì±Î°ù (namespace config Í∏∞Î∞ò)
registry.registerModule(registerAnalysisCommands)          // ÏΩîÎìú Î∂ÑÏÑù Î™ÖÎ†πÏñ¥Îì§
registry.registerModule(registerNamespaceCommands)         // ÎÑ§ÏûÑÏä§ÌéòÏù¥Ïä§ Í¥ÄÎ¶¨
registry.registerModule(registerNamespaceCollectionCommands) // Îç∞Ïù¥ÌÑ∞ ÏàòÏßë Î∞è Î¨∏ÏÑú ÏÉùÏÑ±

// Î™®Îì† Ïª§Îß®Îìú Îì±Î°ù
registry.registerAll(program)

// Help command
program.configureHelp({
  sortSubcommands: true,
  subcommandTerm: (cmd) => cmd.name(),
})

// Error handling
process.on('uncaughtException', (error) => {
  console.error('‚ùå Uncaught Exception:', error.message)
  process.exit(1)
})

process.on('unhandledRejection', (reason) => {
  console.error('‚ùå Unhandled Rejection:', reason)
  process.exit(1)
})

program.parse()
