
 RUN  v3.2.4 /Users/junwoobang/project/deps-cli
      Coverage enabled with v8

 ✓ test/config.test.ts (17 tests) 5ms
 ❯ test/enhanced-dependency-analyzer.test.ts (13 tests | 5 failed) 74ms
   ✓ EnhancedDependencyAnalyzer > 기본 기능 테스트 > EnhancedDependencyAnalyzer 인스턴스가 생성되어야 함 5ms
   ✓ EnhancedDependencyAnalyzer > 기본 기능 테스트 > clearCache 메서드가 정상 작동해야 함 0ms
   ✓ EnhancedDependencyAnalyzer > 파일 처리 테스트 > buildProjectDependencyGraph를 통해 프로젝트의 모든 TypeScript 파일을 확인할 수 있어야 함 28ms
   ✓ EnhancedDependencyAnalyzer > 파일 처리 테스트 > buildProjectDependencyGraph가 의존성 그래프를 생성해야 함 5ms
   × EnhancedDependencyAnalyzer > 파일 처리 테스트 > findUnusedFilesFromGraph가 올바르게 작동해야 함 10ms
     → expected false to be true // Object.is equality
   ✓ EnhancedDependencyAnalyzer > 파일 처리 테스트 > findFilesUsingTargetFromGraph가 특정 파일을 사용하는 파일들을 찾아야 함 6ms
   × EnhancedDependencyAnalyzer > 파일 처리 테스트 > findUnusedMethodsFromGraph가 사용되지 않는 메서드를 찾아야 함 5ms
     → expected false to be true // Object.is equality
   ✓ EnhancedDependencyAnalyzer > 파일 처리 테스트 > findFilesUsingMethodFromGraph가 특정 메서드를 사용하는 파일들을 찾아야 함 7ms
   × EnhancedDependencyAnalyzer > 경로 해석 테스트 > resolveImportPath가 상대 경로를 올바르게 해석해야 함 1ms
     → expected undefined to be true // Object.is equality
   ✓ EnhancedDependencyAnalyzer > 경로 해석 테스트 > isNodeModule이 node_modules 경로를 올바르게 판단해야 함 0ms
   × EnhancedDependencyAnalyzer > 엔트리 포인트 식별 테스트 > identifyEntryPoints가 엔트리 포인트를 올바르게 식별해야 함 3ms
     → expected false to be true // Object.is equality
   × EnhancedDependencyAnalyzer > 메서드 참조 찾기 테스트 > findMethodReferences가 메서드 참조를 찾아야 함 3ms
     → expected false to be true // Object.is equality
   ✓ EnhancedDependencyAnalyzer > 캐시 기능 테스트 > parseWithCache가 캐시를 사용해야 함 1ms
error: unknown command 'invalid-command'
error: unknown command 'analyze'
error: unknown command 'find-usages'
 ✓ test/enhanced-cli.test.ts (13 tests) 2937ms
   ✓ Enhanced CLI 전체 기능 테스트 > Enhanced 분석 명령어 > find-unused-files-enhanced 실행  358ms
   ✓ Enhanced CLI 전체 기능 테스트 > Enhanced 분석 명령어 > find-unused-methods-enhanced 실행  340ms
   ✓ Enhanced CLI 전체 기능 테스트 > Enhanced 분석 명령어 > analyze-enhanced 현재 프로젝트 실행  349ms
   ✓ Enhanced CLI 전체 기능 테스트 > JSON 출력 형식 > find-unused-files-enhanced JSON 출력  356ms
   ✓ Enhanced CLI 전체 기능 테스트 > 에러 처리 > 존재하지 않는 파일 경로로 find-usages-enhanced 실행  350ms
   ✓ Enhanced CLI 전체 기능 테스트 > 성능 테스트 > Enhanced 시스템 분석 속도  341ms

⎯⎯⎯⎯⎯⎯⎯ Failed Tests 5 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  test/enhanced-dependency-analyzer.test.ts > EnhancedDependencyAnalyzer > 파일 처리 테스트 > findUnusedFilesFromGraph가 올바르게 작동해야 함
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ test/enhanced-dependency-analyzer.test.ts:135:72
    133|       // package.json이 있으면 엔트리 포인트가 명확해져서 미사용 파일 감지 가능
    134|       // UnusedFile.ts는 어디서도 import되지 않으므로 미사용 파일에 포함되어야 함
    135|       expect(unusedFiles.some(file => file.includes('UnusedFile.ts')))…
       |                                                                        ^
    136|     })
    137| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/5]⎯

 FAIL  test/enhanced-dependency-analyzer.test.ts > EnhancedDependencyAnalyzer > 파일 처리 테스트 > findUnusedMethodsFromGraph가 사용되지 않는 메서드를 찾아야 함
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ test/enhanced-dependency-analyzer.test.ts:159:10
    157|       expect(unusedMethods.some(method =>
    158|         method.methodName === 'getAllUsers' || method.methodName === '…
    159|       )).toBe(true)
       |          ^
    160|     })
    161| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/5]⎯

 FAIL  test/enhanced-dependency-analyzer.test.ts > EnhancedDependencyAnalyzer > 경로 해석 테스트 > resolveImportPath가 상대 경로를 올바르게 해석해야 함
AssertionError: expected undefined to be true // Object.is equality

[32m- Expected:[39m 
true

[31m+ Received:[39m 
undefined

 ❯ test/enhanced-dependency-analyzer.test.ts:180:52
    178| 
    179|       expect(resolved).toBeDefined()
    180|       expect(resolved?.includes('UserService.ts')).toBe(true)
       |                                                    ^
    181|     })
    182| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/5]⎯

 FAIL  test/enhanced-dependency-analyzer.test.ts > EnhancedDependencyAnalyzer > 엔트리 포인트 식별 테스트 > identifyEntryPoints가 엔트리 포인트를 올바르게 식별해야 함
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ test/enhanced-dependency-analyzer.test.ts:216:63
    214| 
    215|       // main과 bin에 정의된 파일들이 엔트리 포인트로 식별되어야 함
    216|       expect(entryPoints.some(ep => ep.includes('index.ts'))).toBe(tru…
       |                                                               ^
    217|       expect(entryPoints.some(ep => ep.includes('cli.ts'))).toBe(true)
    218|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/5]⎯

 FAIL  test/enhanced-dependency-analyzer.test.ts > EnhancedDependencyAnalyzer > 메서드 참조 찾기 테스트 > findMethodReferences가 메서드 참조를 찾아야 함
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ test/enhanced-dependency-analyzer.test.ts:257:78
    255|         expect(Array.isArray(references)).toBe(true)
    256|         // service-user.ts에서 getData 메서드를 호출하므로 참조가 있어야 함
    257|         expect(references.some(ref => ref.file.includes('service-user.…
       |                                                                              ^
    258|       }
    259|     })

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/5]⎯


 Test Files  1 failed | 2 passed (3)
      Tests  5 failed | 38 passed (43)
   Start at  23:55:54
   Duration  3.31s (transform 85ms, setup 0ms, collect 214ms, tests 3.02s, environment 0ms, prepare 175ms)

